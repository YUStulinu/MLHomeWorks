# -*- coding: utf-8 -*-
"""LAB2IAProdanConstantinIustin

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rtqqr2p8ZTyp7VF_DiahOIdNI8OiiPq0
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import OneHotEncoder

# Încărcăm setul de date
data = pd.read_csv("HR-Em.csv")

# Caracteristicile și variabila țintă
features = data[['EducationField', 'Department', 'Gender']]
target = data['JobRole']

# Inițializăm un codificator one-hot
onehot_encoder = OneHotEncoder(sparse=False, handle_unknown='ignore')

# Transformăm caracteristicile în date numerice one-hot
X_encoded = onehot_encoder.fit_transform(features)

# Impărțim datele în set de antrenare și set de testare
X_train, X_test, y_train, y_test = train_test_split(X_encoded, target, test_size=0.2, random_state=42)

# Antrenăm modelul de clasificare
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Evaluarea performanței modelului pe setul de testare
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Pregătim datele pentru o singură instanță (înlocu, cu valorile corespunzătoare pentru predicție)
new_instance = onehot_encoder.transform([['Technical Degree', 'Sales', 'Male']])

# Realizăm predicția cu modelul antrenat
predicted_job_role = model.predict(new_instance)

print("Predicted Job Role:", predicted_job_role)