# -*- coding: utf-8 -*-
"""Lab1IAProdanConstantinIustin

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vEzOz21wdMKXKcGe0d60r53I8C_v55b1
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Setul de date
data = pd.read_csv("train.csv")

# Atribute pentru modelul de regresie
features = ['OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', '1stFlrSF']
X = data[features]
y = data['SalePrice']

# Setul de date împartit in setul de antrenare și cel de testare
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Modelul Random Forest Regressor
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predicții pe setul de testare
y_pred = model.predict(X_test)

# Calcularea erorii modelului
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Afișarea unui plot al modelului
plt.scatter(X_test['GrLivArea'], y_test, color='green', label='Actual Prices')
plt.scatter(X_test['GrLivArea'], y_pred, color='red', label='Predicted Prices')
plt.xlabel('GrLivArea')
plt.ylabel('SalePrice')
plt.legend(loc='upper left')
plt.title('Actual vs. Predicted Prices')
plt.show()